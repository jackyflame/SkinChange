apply plugin: 'com.android.application'

android {
    def versions = rootProject.ext.versions
    compileSdkVersion versions.compileSdkVersion
    defaultConfig {
        applicationId versions.applicationId
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode versions.versionCode
        versionName versions.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    def deps = rootProject.ext.deps
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.suport.appcompat
    implementation deps.suport.constraintlayout
    implementation deps.suport.design
    // ViewModel 和 LiveData
    implementation deps.suport.lifecycle
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

//    // 仅用 ViewModel
//    implementation "android.arch.lifecycle:viewmodel:$lifecycle_version"
//    // 仅用 LiveData
//    implementation "android.arch.lifecycle:livedata:$lifecycle_version"
//    //  仅仅支持Lifecycle, 不包含LifeModel和LiveData
//    implementation "android.arch.lifecycle:runtime:$lifecycle_version"
//
//    annotationProcessor "android.arch.lifecycle:compiler:$lifecycle_version"
//    // 如果用的是java8使用以下的依赖
//    implementation "android.arch.lifecycle:common-java8:$lifecycle_version"
//
//    // LiveData 的 ReactiveStreams插件
//    implementation "android.arch.lifecycle:reactivestreams:$lifecycle_version"
//
//    // LiveData测试
//    testImplementation "android.arch.core:core-testing:$lifecycle_version"

}
